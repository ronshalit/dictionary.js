(function(){
  // global id for each dictionary
  _dicId = 0;
  this.Dictionary = function Dictionary(){  
    var _d = {},_id = 0, _myId = ++_dicId, _keys=[],_keysDict={};
    // insert, or retrieve a value to the dictionary
    this.i = function(key,val){    
      // true if the key can be used in a regular dictionary
      var isValidKey = typeof key == 'string' || typeof key == 'number';
      // insert the regular key into a regular dictionary, regularly
      if(arguments.length>1 && isValidKey){
        if(!_keysDict[key]){
          // save this key in my list of keys
          _keys.push(key);
          _keysDict[key]=true;
        }
        _d[key]=val;
      }
      // insert the value using an autogenerated key, and keep the key on the object (each dictionary saves its own keys)
      if(arguments.length>1 && !isValidKey){
        // save the custom key on the object (if needed) and save the value in the underlying dictionary
        _d[key["__id"+_myId] =(key["__id"+_myId]==undefined? ++_id:key["__id"+_myId])] = val;
        if(!_keysDict["__id"+_id]){
          // save this key in my list of keys
          _keys.push(key);
          _keysDict["__id"+_id]=true;
        }
      }        
      // get the value using a regular key
      if(arguments.length==1 && isValidKey)
        return _d[key];
      // get the value using the generated key  
      if(arguments.length==1 && !isValidKey)
        return _d[key["__id"+_myId]];    
    }
    // gets the list of keys
    this.keys = function(){ return _keys;} 
  }
})();


